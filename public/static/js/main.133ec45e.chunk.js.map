{"version":3,"sources":["layout/Menu.js","utils/date-time.js","utils/format-reservation-date.js","utils/api.js","layout/ErrorAlert.js","dashboard/Reservations.js","dashboard/Tables.js","dashboard/Dashboard.js","new_reservation/NewReservation.js","seat_reservation/SeatReservation.js","new_table/NewTable.js","layout/NotFound.js","utils/useQuery.js","search/Search.js","edit_reservation/EditReservation.js","layout/Routes.js","layout/Layout.js","App.js","index.js"],"names":["Menu","className","to","id","style","marginTop","marginBottom","href","dateFormat","asDateString","date","getFullYear","toString","getMonth","padStart","getDate","formatDate","reservation","reservation_date","match","formatReservationDate","reservations","Array","isArray","map","API_BASE_URL","process","headers","Headers","fetchJson","url","options","onCancel","a","fetch","response","status","json","payload","error","Promise","reject","message","data","name","console","stack","resolve","getReservation","reservation_id","signal","URL","editReservation","method","body","JSON","stringify","listReservations","params","Object","entries","forEach","key","value","searchParams","append","then","formatReservationTime","postReservation","postTable","listTables","clearTable","table_id","occupied","seatTable","updateReservationStatus","ErrorAlert","Reservations","history","useHistory","cancelClickHandler","first_name","last_name","mobile_number","reservation_time","people","window","confirm","abortController","AbortController","push","log","length","index","slice","data-reservation-id-status","charAt","toUpperCase","onClick","data-reservation-id-cancel","Tables","tables","table","go","sortedTables","table_name","data-table-id-status","data-table-id-finish","finishButton","Dashboard","useState","setReservations","reservationsError","setReservationsError","setTables","tablesError","setTablesError","useEffect","catch","abort","currentDate","split","year","month","day","Date","setMonth","setDate","previous","next","justify-content","NewReservation","today","setFirstName","setLastName","setMobileNumber","setReservationDate","setReservationTime","setPeople","newReservationError","setNewReservationError","event","preventDefault","handleReservationDateChange","target","onSubmit","htmlFor","type","onChange","step","min","Number","goBack","SeatReservation","selectedTable","setSelectedTable","useParams","err","mappedTables","capacity","handleSubmit","NewTable","setTableName","setCapacity","tableError","setTableError","NotFound","useQuery","URLSearchParams","useLocation","search","Search","ifFound","placeholder","EditReservation","setReservation","loadReservation","Routes","query","exact","path","get","Layout","backgroundColor","paddingBottom","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAyDeA,MA9Cf,WACE,OACE,qBAAKC,UAAU,2CAAf,SACE,sBAAKA,UAAU,yCAAf,UAEE,cAAC,IAAD,CACEA,UAAU,kFACVC,GAAG,IAFL,SAIE,qBAAKD,UAAU,qBAAf,SACE,oBAAIE,GAAG,QAAQC,MAAO,CAAEC,UAAW,IAAnC,iCAIJ,qBAAIJ,UAAU,qCAAqCG,MAAO,CAAEE,aAAc,IAAMH,GAAG,mBAAnF,UACE,oBAAIF,UAAU,WAAd,SACE,oBAAGA,UAAU,WAAWM,KAAK,aAA7B,UACE,sBAAMN,UAAU,oBADlB,qBAKF,oBAAIA,UAAU,WAAd,SACE,oBAAGA,UAAU,WAAWM,KAAK,UAA7B,UACE,sBAAMN,UAAU,2BADlB,kBAKF,oBAAIA,UAAU,WAAd,SACE,oBAAGA,UAAU,WAAWM,KAAK,oBAA7B,UACE,sBAAMN,UAAU,eADlB,2BAKF,oBAAIA,UAAU,WAAd,SACE,oBAAGA,UAAU,WAAWM,KAAK,cAA7B,UACE,sBAAMN,UAAU,iBADlB,8B,8BC7CNO,EAAa,qBAcnB,SAASC,EAAaC,GACpB,MAAM,GAAN,OAAUA,EAAKC,cAAcC,SAAS,IAAtC,aAA8CF,EAAKG,WAAa,GAC7DD,SAAS,IACTE,SAAS,EAAG,KAFf,YAEuBJ,EAAKK,UAAUH,SAAS,IAAIE,SAAS,EAAG,MCfjE,SAASE,EAAWC,GAElB,OADAA,EAAYC,iBAAgCD,EAAYC,iBDyBtCC,MAAMX,GAAY,GCxB7BS,EAUM,SAASG,EAAsBC,GAC5C,OAAOC,MAAMC,QAAQF,GACjBA,EAAaG,IAAIR,GACjBA,EAAWK,GCVjB,IAAMI,EACJC,wBAKIC,EAAU,IAAIC,Q,SAkBLC,E,kFAAf,WAAyBC,EAAKC,EAASC,GAAvC,iBAAAC,EAAA,+EAE2BC,MAAMJ,EAAKC,GAFtC,UAG4B,OADlBI,EAFV,QAGiBC,OAHjB,yCAIa,MAJb,uBAM0BD,EAASE,OANnC,YAMUC,EANV,QAQgBC,MARhB,0CASaC,QAAQC,OAAO,CAAEC,QAASJ,EAAQC,SAT/C,iCAWWD,EAAQK,MAXnB,qCAauB,eAAf,KAAMC,KAbd,uBAcMC,QAAQN,MAAM,KAAMO,OAd1B,sCAiBWN,QAAQO,QAAQf,IAjB3B,2D,sBA0BO,SAAegB,EAAtB,oC,4CAAO,WAA8BC,EAAgBC,GAA9C,iBAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,yBAAwCwB,IAD/C,SAEkBpB,EAAUC,EAAK,CAAEH,UAASuB,UAAU,IAFtD,cAECf,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeiB,EAAtB,sC,4CAAO,WAA+BH,EAAgBN,EAAMO,GAArD,iBAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,yBAAwCwB,IAD/C,SAEkBpB,EACrBC,EACA,CAAEuB,OAAQ,MAAO1B,UAAS2B,KAAMC,KAAKC,UAAUb,GAAOO,UACtD,IALG,cAECf,EAFD,yBAOEA,GAPF,4C,sBAUA,SAAesB,EAAtB,oC,4CAAO,WAAgCC,EAAQR,GAAxC,eAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,kBACZkC,OAAOC,QAAQF,GAAQG,SAAQ,mCAAEC,EAAF,KAAOC,EAAP,YAC7BjC,EAAIkC,aAAaC,OAAOH,EAAKC,EAAMnD,eAHhC,SAKQiB,EAAUC,EAAK,CAAEH,UAASuB,UAAU,IAC9CgB,KAAK9C,GACL8C,KAAKC,GAPH,oF,sBAUA,SAAeC,EAAtB,oC,4CAAO,WAA+BzB,EAAMO,GAArC,eAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,kBADP,SAEQI,EACXC,EACA,CAAEuB,OAAQ,OAAQ1B,UAAS2B,KAAMC,KAAKC,UAAUb,GAAOO,UACvD,IALG,oF,sBASA,SAAemB,EAAtB,oC,4CAAO,WAAyB1B,EAAMO,GAA/B,eAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,YADP,SAEQI,EACXC,EACA,CAAEuB,OAAQ,OAAQ1B,UAAS2B,KAAMC,KAAKC,UAAUb,GAAOO,UACvD,IALG,oF,sBASA,SAAeoB,EAAtB,kC,4CAAO,WAA0BpB,GAA1B,iBAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,YADP,SAEkBI,EAAUC,EAAK,CAAEH,UAASuB,UAAU,IAFtD,cAECf,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeoC,EAAtB,oC,4CAAO,WAA0BC,EAAUtB,GAApC,mBAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,mBAAkC+C,EAAlC,UACN7B,EAAO,CACXA,KAAM,CACJM,eAAgB,KAChBwB,UAAU,IALT,SAOkB5C,EACrBC,EACA,CAAEuB,OAAQ,SAAU1B,UAAS2B,KAAMC,KAAKC,UAAUb,GAAOO,UACzD,IAVG,cAOCf,EAPD,yBAYEA,GAZF,4C,sBAeA,SAAeuC,EAAtB,sC,4CAAO,WAAyBF,EAAUvB,EAAgBC,GAAnD,mBAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,mBAAkC+C,EAAlC,UACN7B,EAAO,CACXA,KAAM,CACJM,iBACAwB,UAAU,IALT,SAOkB5C,EACrBC,EACA,CAAEuB,OAAQ,MAAO1B,UAAS2B,KAAMC,KAAKC,UAAUb,GAAOO,UACtD,IAVG,cAOCf,EAPD,yBAYEA,GAZF,4C,sBAeA,SAAewC,EAAtB,sC,4CAAO,WAAuC1B,EAAgBb,EAAQc,GAA/D,mBAAAjB,EAAA,6DACCH,EAAM,IAAIqB,IAAJ,UAAW1B,EAAX,yBAAwCwB,EAAxC,YACNN,EAAO,CACXA,KAAM,CACJP,WAJC,SAOkBP,EACrBC,EACA,CAAEuB,OAAQ,MAAO1B,UAAS2B,KAAMC,KAAKC,UAAUb,GAAOO,UACtD,IAVG,cAOCf,EAPD,yBAYEA,GAZF,4C,sBA3HPR,EAAQsC,OAAO,eAAgB,oBCIhBW,MARf,YAAgC,IAAVrC,EAAS,EAATA,MACpB,OACEA,GACE,sBAAKtC,UAAU,yBAAf,oBAAgDsC,EAAMG,YC8G7CmC,MAtHf,YAAyC,IAAjBxD,EAAgB,EAAhBA,aAChByD,EAAUC,cAEVC,EAAkB,uCAAG,WAAO/D,GAAP,2BAAAgB,EAAA,yDAEvBgD,EAMEhE,EANFgE,WACAC,EAKEjE,EALFiE,UACAC,EAIElE,EAJFkE,cACAjE,EAGED,EAHFC,iBACAkE,EAEEnE,EAFFmE,iBACAC,EACEpE,EADFoE,QAEEC,OAAOC,QAAQ,2CATM,iCAWfC,EAAkB,IAAIC,gBAXP,SAYfrC,EACJnC,EAAYgC,eACZ,CACEN,KAAM,CACJsC,aACAC,YACAC,gBACAjE,mBACAkE,mBACAC,SACAjD,OAAQ,cAGZoD,EAAgBtC,QAzBG,OA2BrB4B,EAAQY,KAAR,8BAAoCzE,EAAYC,mBA3B3B,gDA6BrB2B,QAAQ8C,IAAR,MA7BqB,yDAAH,sDAkCxB,OAAOtE,EAAauE,OAClBvE,EAAaG,KAAI,SAACP,EAAa4E,GAC7B,MACyB,aAAvB5E,EAAYmB,QACW,cAAvBnB,EAAYmB,OAGV,gCACE,uBACA,sBAAKnC,UAAU,MAAMG,MAAO,CAAEC,UAAW,IAAzC,UACE,sBAAKJ,UAAU,QAAf,UACE,+BACGgB,EAAYgE,WADf,IAC4BhE,EAAYiE,UAAW,IAChDjE,EAAYmE,iBAAiBU,MAAM,GAAI,MAE1C,2CAAc7E,EAAYoE,UAC1B,qBAAIU,6BAA4B9E,EAAYgC,eAAgB7C,MAAO,CAAEC,UAAW,IAAhF,eACKY,EAAYmB,OAAO4D,OAAO,GAAGC,cAAgBhF,EAAYmB,OAAO0D,MAAM,GAD3E,WAIsB,WAAvB7E,EAAYmB,OACX,sBAAKnC,UAAU,QAAf,UACE,qBAAKA,UAAU,MAAf,SACE,wBACEA,UAAU,aACViG,QAAS,kBACPpB,EAAQY,KAAR,wBACmBzE,EAAYgC,eAD/B,WAHJ,oBAWF,qBAAKhD,UAAU,MAAf,SACE,wBACEA,UAAU,aACViG,QAAS,kBACPpB,EAAQY,KAAR,wBACmBzE,EAAYgC,eAD/B,WAHJ,oBAWF,qBAAKhD,UAAU,MAAf,SACE,wBACEA,UAAU,eACVkG,6BAA4BlF,EAAYgC,eACxCiD,QAAS,kBAAMlB,EAAmB/D,IAHpC,yBASF,UAjDEA,EAAYgC,gBA8DtB,aAPA,CAOA,kBAKN,gCACE,uBACA,oBAAIhD,UAAU,gCAAd,iCC1DSmG,MAxDf,YAA6B,IAAXC,EAAU,EAAVA,OACVvB,EAAUC,cADU,4CAG1B,WAA4BuB,GAA5B,eAAArE,EAAA,0DAEIqD,OAAOC,QACL,kEAHN,iCAOYC,EAAkB,IAAIC,gBAPlC,SAQYd,EAAwB2B,EAAMrD,eAAgB,WAAYuC,EAAgBtC,QARtF,uBASYqB,EAAW+B,EAAM9B,SAAUgB,EAAgBtC,QATvD,OAUM4B,EAAQyB,GAAG,GAVjB,kDAYM1D,QAAQ8C,IAAR,MAZN,2DAH0B,sBAoB1B,IAAIa,EACF,8BACE,mDA+BJ,OA3BIH,EAAOT,SACTY,EAAeH,EAAO7E,KAAI,SAAC8E,EAAOT,GAChC,OACE,gCACE,uBACA,yCAAYS,EAAMG,cACjBH,EAAMrD,eACL,gCACE,oBAAIyD,uBAAsBJ,EAAM9B,SAAhC,sBAEA,wBACEvE,UAAU,cACV0G,uBAAsBL,EAAM9B,SAC5BpE,MAAO,CAAEC,UAAW,GACpB6F,QAAS,kBAxCG,2CAwCGU,CAAaN,IAJ9B,sBAUF,oBAAII,uBAAsBJ,EAAM9B,SAAhC,oBAjBMqB,OAwBTW,G,MCYMK,MAtDf,YAA8B,IAATnG,EAAQ,EAARA,KAAQ,EACaoG,mBAAS,IADtB,mBACpBzF,EADoB,KACN0F,EADM,OAEuBD,mBAAS,MAFhC,mBAEpBE,EAFoB,KAEDC,EAFC,OAGCH,mBAAS,IAHV,mBAGpBT,EAHoB,KAGZa,EAHY,OAIWJ,mBAAS,MAJpB,mBAIpBK,EAJoB,KAIPC,EAJO,KAKrBtC,EAAUC,cAchB,OAZAsC,qBAEA,WACE,IAAM7B,EAAkB,IAAIC,gBAM5B,OALAwB,EAAqB,MACrBxD,EAAiB,CAAE/C,QAAQ8E,EAAgBtC,QACxCgB,KAAK6C,GACLO,MAAML,GACT3C,EAAWkB,EAAgBtC,QAAQgB,KAAKgD,GAAWI,MAAMF,GAClD,kBAAM5B,EAAgB+B,WATN,CAAC7G,IAaxB,uBAAMT,UAAU,YAAhB,UACE,uBACA,oBAAIA,UAAU,6BAA6BG,MAAO,CAAEE,aAAc,IAAlE,uBACA,sBAAKL,UAAU,kBAAf,UACE,wBACEA,UAAU,aACViG,QAAS,kBAAMpB,EAAQY,KAAR,0BNiBlB,SAAkB8B,GAAc,IAAD,EACTA,EAAYC,MAAM,KADT,mBAC9BC,EAD8B,KACxBC,EADwB,KACjBC,EADiB,KAG9BlH,EAAO,IAAImH,KAAKH,EADtBC,GAAS,EAC0BC,GAGnC,OAFAlH,EAAKoH,SAASpH,EAAKG,YACnBH,EAAKqH,QAAQrH,EAAKK,UAAY,GACvBN,EAAaC,GMvBmCsH,CAAStH,MAF1D,sBAMA,wBACAT,UAAU,aACViG,QAAS,kBAAMpB,EAAQY,KAAK,MAF5B,mBAKA,wBACEzF,UAAU,aACViG,QAAS,kBAAMpB,EAAQY,KAAR,0BNsBlB,SAAc8B,GAAc,IAAD,EACLA,EAAYC,MAAM,KADb,mBAC1BC,EAD0B,KACpBC,EADoB,KACbC,EADa,KAG1BlH,EAAO,IAAImH,KAAKH,EADtBC,GAAS,EAC0BC,GAGnC,OAFAlH,EAAKoH,SAASpH,EAAKG,YACnBH,EAAKqH,QAAQrH,EAAKK,UAAY,GACvBN,EAAaC,GM5BmCuH,CAAKvH,MAFtD,qBAOF,uBACA,qBAAIN,MAAO,CAAEE,aAAc,IAA3B,8BAAmDI,KACnD,cAAC,EAAD,CAAY6B,MAAOyE,IACnB,cAAC,EAAD,CAAc3F,aAAcA,IAC5B,uBACA,oBAAI6G,kBAAgB,SAApB,oBACA,cAAC,EAAD,CAAY3F,MAAO4E,IACnB,cAAC,EAAD,CAAQd,OAAQA,QC4FP8B,MAtJf,WAME,IALsBzH,EAKhB0H,GALgB1H,EAKK,IAAImH,KAJvB,GAAN,OAAUnH,EAAKC,cAAcC,SAAS,IAAtC,aAA8CF,EAAKG,WAAa,GAC7DD,SAAS,IACTE,SAAS,EAAG,KAFf,YAEuBJ,EAAKK,UAAUH,SAAS,IAAIE,SAAS,EAAG,OAJzC,EAQWgG,mBAAS,MARpB,mBAQjB7B,EARiB,KAQLoD,EARK,OASSvB,mBAAS,MATlB,mBASjB5B,EATiB,KASNoD,EATM,OAUiBxB,mBAAS,MAV1B,mBAUjB3B,EAViB,KAUFoD,EAVE,OAWuBzB,mBAASsB,GAXhC,mBAWjBlH,EAXiB,KAWCsH,EAXD,OAYuB1B,mBAAS,SAZhC,mBAYjB1B,EAZiB,KAYCqD,EAZD,OAaI3B,mBAAS,GAbb,mBAajBzB,EAbiB,KAaTqD,EAbS,OAe8B5B,mBAAS,MAfvC,mBAejB6B,EAfiB,KAeIC,EAfJ,KAgBlB9D,EAAUC,cAhBQ,4CAkBxB,WAA4B8D,GAA5B,SAAA5G,EAAA,6DACE4G,EAAMC,iBADR,kBAGU1E,EAAgB,CACpBzB,KAAM,CACJsC,aACAC,YACAC,gBACAjE,mBACAkE,mBACAC,YAVR,OAaIP,EAAQY,KAAR,0BAAgCxE,IAbpC,gDAeI0H,EAAuB,EAAD,IAf1B,0DAlBwB,sBAqCxB,IASMG,EAA2B,uCAAG,WAAOF,GAAP,SAAA5G,EAAA,sEAC5BuG,EAAmBK,EAAMG,OAAOjF,OADJ,OAElClB,QAAQ8C,WAAWzE,EAAkBA,GAFH,2CAAH,sDAWjC,OACE,sBAAKjB,UAAU,YAAf,UACE,oBAAIG,MAAO,CAAEC,UAAW,GAAIC,aAAc,IAA1C,6BACA,uBAAM2I,SA5Dc,4CA4DpB,UACE,sBAAKhJ,UAAU,MAAf,UACA,uBAAOA,UAAU,QAAQiJ,QAAQ,aAAjC,yBACE,uBACAjJ,UAAU,QACRE,GAAG,aACHgJ,KAAK,OACLvG,KAAK,aACLmB,MAAOkB,EACPmE,SAhCoB,SAACP,GAC7BR,EAAaQ,EAAMG,OAAOjF,aAkCtB,sBAAK9D,UAAU,MAAf,UACA,uBAAOA,UAAU,QAAQiJ,QAAQ,YAAjC,wBACE,uBACCjJ,UAAU,QACTE,GAAG,YACHgJ,KAAK,OACLvG,KAAK,YACLmB,MAAOmB,EACPkE,SAxCmB,SAACP,GAC5BP,EAAYO,EAAMG,OAAOjF,aA0CrB,sBAAK9D,UAAU,MAAf,UACA,uBAAOA,UAAU,QAAQiJ,QAAQ,gBAAjC,4BAGE,uBACCjJ,UAAU,QACTE,GAAG,gBACHgJ,KAAK,OACLvG,KAAK,gBACLmB,MAAOoB,EACPiE,SAlDuB,SAACP,GAChCN,EAAgBM,EAAMG,OAAOjF,aAoDzB,sBAAK9D,UAAU,MAAf,UACA,uBAAOA,UAAU,QAAQiJ,QAAQ,mBAAjC,+BAGE,uBACCjJ,UAAU,QACTE,GAAG,mBACHgJ,KAAK,OACLvG,KAAK,mBACLmB,MAAO7C,EACPkI,SAAUL,OAGd,sBAAK9I,UAAU,MAAf,UACA,uBAAOA,UAAU,QAAQiJ,QAAQ,mBAAjC,+BAGE,uBACCjJ,UAAU,QACTE,GAAG,mBACHgJ,KAAK,OACLE,KAAK,MACLzG,KAAK,mBACLmB,MAAOqB,EACPgE,SAtE0B,SAACP,GACnCJ,EAAmBI,EAAMG,OAAOjF,aAwE5B,sBAAK9D,UAAU,MAAf,UACA,uBAAOA,UAAU,QAAQiJ,QAAQ,SAAjC,qBAGE,uBACCjJ,UAAU,QACTE,GAAG,SACHgJ,KAAK,SACLG,IAAI,IACJ1G,KAAK,SACLmB,MAAOsB,EACP+D,SAjFiB,SAACP,GAC1BH,EAAUa,OAAOV,EAAMG,OAAOjF,cAmF1B,uBACA,wBAAQ9D,UAAU,eAAekJ,KAAK,SAAtC,oBACA,wBAAQlJ,UAAU,eAAekJ,KAAK,SAASjD,QAAS,kBAAMpB,EAAQ0E,UAAtE,oBAGA,uBACA,uBACA,cAAC,EAAD,CAAYjH,MAAOoG,WCzEZc,MAvEf,WAA4B,IAAD,EACG3C,mBAAS,IADZ,mBAClBT,EADkB,KACVa,EADU,OAEaJ,mBAAS,MAFtB,mBAElBK,EAFkB,KAELC,EAFK,OAGiBN,mBAAS,MAH1B,mBAGlB4C,EAHkB,KAGHC,EAHG,KAKjB1G,EAAmB2G,cAAnB3G,eACF6B,EAAUC,cANS,4CAgBzB,WAA4B9B,GAA5B,eAAAhB,EAAA,6DACQuD,EAAkB,IAAIC,gBAD9B,SAEQf,EAAUgF,EAAezG,EAAgBuC,EAAgBtC,QAFjE,uBAGQyB,EAAwB1B,EAAgB,SAAUuC,EAAgBtC,QACrEgB,MAAK,kBAAMY,EAAQY,KAAK,QACxB4B,OAAM,SAACuC,GACNhH,QAAQ8C,IAAIkE,MANlB,4CAhByB,sBAQzBxC,qBAEA,WACE,IAAM7B,EAAkB,IAAIC,gBAE5B,OADAnB,EAAWkB,EAAgBtC,QAAQgB,KAAKgD,GAAWI,MAAMF,GAClD,kBAAM5B,EAAgB+B,WALN,IAsBzB,IAAMuC,EACJzD,EAAO7E,KAAI,SAAC8E,EAAOT,GACjB,OACES,EAAMrD,eACJ,yBAAoBc,MAAOuC,EAAM9B,SAAjC,UACG8B,EAAMG,WADT,gBAAaZ,GAIb,yBAAoB9B,MAAOuC,EAAM9B,SAAjC,UACC8B,EAAMG,WADP,MACsBH,EAAMyD,WADflE,MAOrB,OACE,sBAAK5F,UAAU,YAAf,UACE,oBAAIG,MAAO,CAAEC,UAAW,IAAxB,8BACA,yBAAQuC,KAAK,WAAWwG,SAtB5B,SAAuBP,GACrBc,EAAiBJ,OAAOV,EAAMG,OAAOjF,SAqBc3D,MAAO,CAAEC,UAAW,IAArE,UACE,wBAAQ0D,MAAM,GAAd,+BACC+F,KAEH,uBACA,uBACA,cAAC,EAAD,CAAYvH,MAAO4E,IACnB,wBACEgC,KAAK,SACLlJ,UAAU,eACViG,QAAS,kBA1DU,2CA0DJ8D,CAAaT,OAAOtG,KAHrC,oBAOA,wBAAQkG,KAAK,SACblJ,UAAU,eACViG,QAAS,kBAAMpB,EAAQ0E,UAFvB,wBCOSS,MAtEf,WAAqB,IAAD,EACiBnD,mBAAS,IAD1B,mBACXL,EADW,KACCyD,EADD,OAEcpD,mBAAS,MAFvB,mBAEXiD,EAFW,KAEDI,EAFC,OAGkBrD,mBAAS,MAH3B,mBAGXsD,EAHW,KAGCC,EAHD,KAKZvF,EAAUC,cAUViF,EAAY,uCAAG,WAAOnB,GAAP,SAAA5G,EAAA,6DACnB4G,EAAMC,iBADa,kBAGXzE,EAAU,CACd1B,KAAM,CACJ8D,aACAsD,cANa,OASjBjF,EAAQY,KAAK,KATI,gDAWjB2E,EAAc,EAAD,IAXI,yDAAH,sDAelB,OACE,sBAAKpK,UAAU,YAAf,UACE,oBAAIG,MAAO,CAAEC,UAAW,GAAIC,aAAc,IAA1C,uBACA,uBAAM2I,SAAUe,EAAhB,UACE,sBAAK/J,UAAU,MAAf,UACA,uBAAOA,UAAU,QAAQiJ,QAAQ,aAAjC,0BACA,uBACAjJ,UAAU,QACRE,GAAG,aACHgJ,KAAK,SACLvG,KAAK,aACLmB,MAAO0C,EACP2C,SAnCuB,SAACP,GAC9BqB,EAAarB,EAAMG,OAAOjF,aAqCtB,sBAAK9D,UAAU,MAAf,UACA,uBAAOA,UAAU,QAAQiJ,QAAQ,WAAjC,wBACA,uBACCjJ,UAAU,QACTE,GAAG,WACHgJ,KAAK,UACLvG,KAAK,WACLmB,MAAOgG,EACPX,SA1CsB,SAACP,GAC7BsB,EAAYtB,EAAMG,OAAOjF,aA4CrB,wBAAQ9D,UAAU,eAAekJ,KAAK,SAAS/I,MAAO,CAAEC,UAAW,IAAnE,oBAGA,wBAAQJ,UAAU,eAAekJ,KAAK,SAASjD,QAASpB,EAAQ0E,OAAhE,oBAGA,uBACA,uBACA,cAAC,EAAD,CAAYjH,MAAO6H,WCpDZE,MARf,WACE,OACE,qBAAKrK,UAAU,WAAf,SACE,8CCGSsK,MAJf,WACE,OAAO,IAAIC,gBAAgBC,cAAcC,SCuC5BC,MA9Cf,WAAmB,IAAD,EACyB7D,mBAAS,MADlC,mBACT3B,EADS,KACMoD,EADN,OAEwBzB,mBAAS,IAFjC,mBAETzF,EAFS,KAEK0F,EAFL,OAGkCD,mBAAS,MAH3C,mBAGTE,EAHS,KAGUC,EAHV,KAKV+C,EAAY,uCAAG,WAAOnB,GAAP,eAAA5G,EAAA,6DACnB4G,EAAMC,iBACAtD,EAAkB,IAAIC,gBAC5BhC,EAAiB,CAAE0B,iBAAiBK,EAAgBtC,QACjDgB,KAAK6C,GACLO,MAAML,GALU,mBAMZ,kBAAMzB,EAAgB+B,WANV,2CAAH,sDAaZqD,EAAUvJ,EAAauE,OAC3B,cAAC,EAAD,CAAcvE,aAAcA,IAE5B,sDAGF,OACE,sBAAKpB,UAAU,YAAf,UACE,oBAAIG,MAAO,CAAEC,UAAW,IAAxB,oCACA,uBAAM4I,SAAUe,EAAhB,UACE,uBACE5J,MAAO,CAAEC,UAAW,IACpBJ,UAAU,QACV2C,KAAK,gBACLuG,KAAK,OACLpF,MAAOoB,EACP0F,YAAY,sBACZzB,SArByB,SAACP,GAChCN,EAAgBM,EAAMG,OAAOjF,UAsBzB,uBACA,wBAAQ9D,UAAU,aAAakJ,KAAK,SAAS/I,MAAO,CAAEC,UAAW,GAAIC,aAAc,IAAnF,kBACA,cAAC,EAAD,CAAYiC,MAAOyE,IAClB4D,SCxCM,SAASE,IAAmB,IAAD,EACLhE,mBAAS,MADJ,mBACjC7B,EADiC,KACrBoD,EADqB,OAEPvB,mBAAS,MAFF,mBAEjC5B,EAFiC,KAEtBoD,EAFsB,OAGCxB,mBAAS,MAHV,mBAGjC3B,EAHiC,KAGlBoD,EAHkB,OAIOzB,mBAAS,MAJhB,mBAIjC5F,EAJiC,KAIfsH,EAJe,OAKO1B,mBAAS,MALhB,mBAKjC1B,EALiC,KAKfqD,EALe,OAMZ3B,mBAAS,MANG,mBAMjCzB,EANiC,KAMzBqD,EANyB,KAOhCzF,EAAmB2G,cAAnB3G,eAPgC,EASc6D,mBAAS,MATvB,mBASjC6B,EATiC,KASZC,EATY,KAUlC9D,EAAUC,cAVwB,EAYF+B,mBAAS,IAZP,mBAYjC7F,EAZiC,KAYpB8J,EAZoB,KAexC1D,qBAAU,WACR,IAAM7B,EAAkB,IAAIC,gBADd,4CAGd,4BAAAxD,EAAA,+EAE2Be,EACrBC,EACAuC,EAAgBtC,QAJtB,OAEUf,EAFV,OAMI4I,EAAe5I,GACfkG,EAAalG,EAAS8C,YACtBqD,EAAYnG,EAAS+C,WACrBqD,EAAgBpG,EAASgD,eACzBqD,EAAmBrG,EAASjB,kBAC5BuH,EAAmBtG,EAASiD,kBAC5BsD,EAAUvG,EAASkD,QAZvB,qDAcuB,eAAf,KAAMzC,KAdd,iBAeMC,QAAQ8C,IAAI,WAflB,8FAHc,sBAyBd,OAzBc,mCAwBdqF,GACO,kBAAMxF,EAAgB+B,WAC5B,CAACtE,IAEJ,IAAM+G,EAAY,uCAAG,WAAOnB,GAAP,eAAA5G,EAAA,6DACnB4G,EAAMC,iBACAtD,EAAkB,IAAIC,gBAFT,kBAIXrC,EACJH,EACA,CACEN,KAAM,CACJsC,aACAC,YACAC,gBACAjE,mBACAkE,mBACAC,SACAjD,OAAQ,WAGZoD,EAAgBtC,QAjBD,OAmBjB4B,EAAQY,KAAR,2BAAiCzE,EAAYC,mBAnB5B,gDAqBjB0H,EAAuB,EAAD,IArBL,yDAAH,sDA4ClB,OACE,sBAAK3I,UAAU,YAAf,UACE,oBAAIG,MAAO,CAAEC,UAAW,GAAIC,aAAc,IAA1C,8BACA,uBAAM2I,SAAUe,EAAhB,UACE,sBAAK/J,UAAU,MAAf,UACE,uBAAOA,UAAU,QAAQiJ,QAAQ,aAAjC,yBAGA,uBACEjJ,UAAU,QACVE,GAAG,aACHgJ,KAAK,OACLvG,KAAK,aACLmB,MAAOkB,EACPmE,SAjCoB,SAACP,GAC7BR,EAAaQ,EAAMG,OAAOjF,aAmCtB,sBAAK9D,UAAU,MAAf,UACE,uBAAOA,UAAU,QAAQiJ,QAAQ,YAAjC,wBAGA,uBACEjJ,UAAU,QACVE,GAAG,YACHgJ,KAAK,OACLvG,KAAK,YACLmB,MAAOmB,EACPkE,SA3CmB,SAACP,GAC5BP,EAAYO,EAAMG,OAAOjF,aA6CrB,sBAAK9D,UAAU,MAAf,UACE,uBAAOA,UAAU,QAAQiJ,QAAQ,gBAAjC,4BAGA,uBACEjJ,UAAU,QACVE,GAAG,gBACHgJ,KAAK,OACLvG,KAAK,gBACLmB,MAAOoB,EACPiE,SArDuB,SAACP,GAChCN,EAAgBM,EAAMG,OAAOjF,aAuDzB,sBAAK9D,UAAU,MAAf,UACE,uBAAOA,UAAU,QAAQiJ,QAAQ,mBAAjC,+BAGA,uBACEjJ,UAAU,QACVE,GAAG,mBACHgJ,KAAK,OACLvG,KAAK,mBACLmB,MAAO7C,EACPkI,SA/D0B,SAACP,GACnCL,EAAmBK,EAAMG,OAAOjF,aAiE5B,sBAAK9D,UAAU,MAAf,UACE,uBAAOA,UAAU,QAAQiJ,QAAQ,mBAAjC,+BAGA,uBACEjJ,UAAU,QACVE,GAAG,mBACHgJ,KAAK,OACLE,KAAK,MACLzG,KAAK,mBACLmB,MAAOqB,EACPgE,SA1E0B,SAACP,GACnCJ,EAAmBI,EAAMG,OAAOjF,aA4E5B,sBAAK9D,UAAU,MAAf,UACE,uBAAOA,UAAU,QAAQiJ,QAAQ,SAAjC,qBAGA,uBACEjJ,UAAU,QACVE,GAAG,SACHgJ,KAAK,SACLG,IAAI,IACJ1G,KAAK,SACLmB,MAAOsB,EACP+D,SArFiB,SAACP,GAC1BH,EAAUa,OAAOV,EAAMG,OAAOjF,cAuF1B,uBACA,wBAAQ9D,UAAU,eAAekJ,KAAK,SAAtC,oBAGA,wBACElJ,UAAU,eACVkJ,KAAK,SACLjD,QAAS,kBAAMpB,EAAQ0E,UAHzB,oBAOA,uBACA,uBACA,cAAC,EAAD,CAAYjH,MAAOoG,UCpIZsC,MAnCf,WACE,IAAMC,EAAQX,IACd,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOY,OAAO,EAAMC,KAAK,IAAzB,SACE,cAAC,IAAD,CAAUlL,GAAI,iBAEhB,cAAC,IAAD,CAAOiL,OAAO,EAAMC,KAAK,gBAAzB,SACE,cAAC,IAAD,CAAUlL,GAAI,iBAEhB,cAAC,IAAD,CAAOkL,KAAK,aAAZ,SACE,cAAC,EAAD,CAAW1K,KAAMwK,EAAMG,IAAI,Sde1B5K,EAAa,IAAIoH,UcbpB,cAAC,IAAD,CAAOuD,KAAK,oBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,qCAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,qCAAZ,SACE,cAACN,EAAD,MAEF,cAAC,IAAD,CAAOM,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,EAAD,U,MCvBOE,MAff,WACE,OACE,qBAAKrL,UAAU,kBAAkBG,MAAO,CAAEmL,gBAAiB,kBAA3D,SACE,sBAAKtL,UAAU,YAAf,UACE,qBAAKA,UAAU,oBAAoBG,MAAO,CAAEoL,cAAe,IAA3D,SACE,cAAC,EAAD,MAEF,qBAAKvL,UAAU,MAAf,SACE,cAAC,EAAD,YCHKwL,OAVf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOL,KAAK,IAAZ,SACE,cAAC,EAAD,S,YCLRM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.133ec45e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../App.css\"\r\n\r\n/**\r\n * Defines the menu for this application.\r\n *\r\n * @returns {JSX.Element}\r\n */\r\n\r\nfunction Menu() {\r\n  return (\r\n    <nav className=\"navbar navbar-dark align-items-start p-0\">\r\n      <div className=\"container-fluid d-flex flex-column p-0\">\r\n      {/* removed flex-column from above */}\r\n        <Link\r\n          className=\"navbar-brand d-flex justify-content-center align-items-center sidebar-brand m-0\"\r\n          to=\"/\"\r\n        >\r\n          <div className=\"sidebar-brand-text\">\r\n            <h1 id=\"title\" style={{ marginTop: 20 }}>Periodic Tables</h1>\r\n          </div>\r\n        </Link>\r\n\r\n        <ul className=\"nav navbar-nav text-light flex-row\" style={{ marginBottom: 20 }} id=\"accordionSidebar\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/dashboard\">\r\n              <span className=\"oi oi-dashboard\" />\r\n              &nbsp;Dashboard\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/search\">\r\n              <span className=\"oi oi-magnifying-glass\" />\r\n              &nbsp;Search\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/reservations/new\">\r\n              <span className=\"oi oi-plus\" />\r\n              &nbsp;New Reservation\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/tables/new\">\r\n              <span className=\"oi oi-layers\" />\r\n              &nbsp;New Table\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        \r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","const dateFormat = /\\d\\d\\d\\d-\\d\\d-\\d\\d/;\r\nconst timeFormat = /\\d\\d:\\d\\d/;\r\n\r\n/**\r\n * Formats a Date object as YYYY-MM-DD.\r\n *\r\n * This function is *not* exported because the UI should generally avoid working directly with Date instance.\r\n * You may export this function if you need it.\r\n *\r\n * @param date\r\n *  an instance of a date object\r\n * @returns {string}\r\n *  the specified Date formatted as YYYY-MM-DD\r\n */\r\nfunction asDateString(date) {            //? I copied and pasted this because importing wasnt working\r\n  return `${date.getFullYear().toString(10)}-${(date.getMonth() + 1)\r\n    .toString(10)\r\n    .padStart(2, \"0\")}-${date.getDate().toString(10).padStart(2, \"0\")}`;\r\n}\r\n\r\n/**\r\n * Format a date string in ISO-8601 format (which is what is returned from PostgreSQL) as YYYY-MM-DD.\r\n * @param dateString\r\n *  ISO-8601 date string\r\n * @returns {*}\r\n *  the specified date string formatted as YYYY-MM-DD\r\n */\r\nexport function formatAsDate(dateString) {\r\n  return dateString.match(dateFormat)[0];\r\n}\r\n\r\n/**\r\n * Format a time string in HH:MM:SS format (which is what is returned from PostgreSQL) as HH:MM.\r\n * @param timeString\r\n *  HH:MM:SS time string\r\n * @returns {*}\r\n *  the specified time string formatted as YHH:MM.\r\n */\r\nexport function formatAsTime(timeString) {\r\n  return timeString.match(timeFormat)[0];\r\n}\r\n\r\n/**\r\n * Today's date as YYYY-MM-DD.\r\n * @returns {*}\r\n *  the today's date formatted as YYYY-MM-DD\r\n */\r\nexport function today() {\r\n  return asDateString(new Date());\r\n}\r\n\r\n/**\r\n * Subtracts one day to the specified date and return it in as YYYY-MM-DD.\r\n * @param currentDate\r\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\r\n * @returns {*}\r\n *  the date one day prior to currentDate, formatted as YYYY-MM-DD\r\n */\r\nexport function previous(currentDate) {\r\n  let [ year, month, day ] = currentDate.split(\"-\");\r\n  month -= 1;\r\n  const date = new Date(year, month, day);\r\n  date.setMonth(date.getMonth());\r\n  date.setDate(date.getDate() - 1);\r\n  return asDateString(date);\r\n}\r\n\r\n/**\r\n * Adds one day to the specified date and return it in as YYYY-MM-DD.\r\n * @param currentDate\r\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\r\n * @returns {*}\r\n *  the date one day after currentDate, formatted as YYYY-MM-DD\r\n */\r\nexport function next(currentDate) {\r\n  let [ year, month, day ] = currentDate.split(\"-\");\r\n  month -= 1;\r\n  const date = new Date(year, month, day);\r\n  date.setMonth(date.getMonth());\r\n  date.setDate(date.getDate() + 1);\r\n  return asDateString(date);\r\n}\r\n","import { formatAsDate } from \"./date-time\";\r\n\r\nfunction formatDate(reservation) {\r\n  reservation.reservation_date = formatAsDate(reservation.reservation_date);\r\n  return reservation;\r\n}\r\n\r\n/**\r\n * Formats the reservation_date property of a reservation.\r\n * @param reservations\r\n *  a single reservation, or an array of reservations.\r\n * @returns {[reservation]|reservation}\r\n *  the specified reservation(s) with the reservation_date property formatted as YYYY-MM-DD.\r\n */\r\nexport default function formatReservationDate(reservations) {\r\n  return Array.isArray(reservations)\r\n    ? reservations.map(formatDate)\r\n    : formatDate(reservations);\r\n}\r\n","/**\r\n * Defines the base URL for the API.\r\n * The default values is overridden by the `API_BASE_URL` environment variable.\r\n */\r\nimport formatReservationDate from \"./format-reservation-date\";\r\nimport formatReservationTime from \"./format-reservation-date\";\r\n\r\nconst API_BASE_URL =\r\n  process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\r\n\r\n/**\r\n * Defines the default headers for these functions to work with `json-server`\r\n */\r\nconst headers = new Headers();\r\nheaders.append(\"Content-Type\", \"application/json\");\r\n\r\n/**\r\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\r\n *\r\n * This function is NOT exported because it is not needed outside of this file.\r\n *\r\n * @param url\r\n *  the url for the requst.\r\n * @param options\r\n *  any options for fetch\r\n * @param onCancel\r\n *  value to return if fetch call is aborted. Default value is undefined.\r\n * @returns {Promise<Error|any>}\r\n *  a promise that resolves to the `json` data or an error.\r\n *  If the response is not in the 200 - 399 range the promise is rejected.\r\n */\r\nasync function fetchJson(url, options, onCancel) {\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (response.status === 204) {\r\n      return null;\r\n    }\r\n    const payload = await response.json();\r\n\r\n    if (payload.error) {\r\n      return Promise.reject({ message: payload.error });\r\n    }\r\n    return payload.data;\r\n  } catch (error) {\r\n    if (error.name !== \"AbortError\") {\r\n      console.error(error.stack);\r\n      throw error;\r\n    }\r\n    return Promise.resolve(onCancel);\r\n  }\r\n}\r\n\r\n/**\r\n * Retrieves all existing reservation.\r\n * @returns {Promise<[reservation]>}\r\n *  a promise that resolves to a possibly empty array of reservation saved in the database.\r\n */\r\nexport async function getReservation(reservation_id, signal) {\r\n  const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}`);\r\n  const response = await fetchJson(url, { headers, signal }, []);\r\n  return response;\r\n}\r\n\r\nexport async function editReservation(reservation_id, data, signal) {\r\n  const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}`);\r\n  const response = await fetchJson(\r\n    url,\r\n    { method: \"put\", headers, body: JSON.stringify(data), signal },\r\n    []\r\n  );\r\n  return response;\r\n}\r\n\r\nexport async function listReservations(params, signal) {\r\n  const url = new URL(`${API_BASE_URL}/reservations`);\r\n  Object.entries(params).forEach(([key, value]) =>\r\n    url.searchParams.append(key, value.toString())\r\n  );\r\n  return await fetchJson(url, { headers, signal }, [])\r\n    .then(formatReservationDate)\r\n    .then(formatReservationTime);\r\n}\r\n\r\nexport async function postReservation(data, signal) {\r\n  const url = new URL(`${API_BASE_URL}/reservations`);\r\n  return await fetchJson(\r\n    url,\r\n    { method: \"post\", headers, body: JSON.stringify(data), signal },\r\n    []\r\n  );\r\n}\r\n\r\nexport async function postTable(data, signal) {\r\n  const url = new URL(`${API_BASE_URL}/tables`);\r\n  return await fetchJson(\r\n    url,\r\n    { method: \"post\", headers, body: JSON.stringify(data), signal },\r\n    []\r\n  );\r\n}\r\n\r\nexport async function listTables(signal) {\r\n  const url = new URL(`${API_BASE_URL}/tables`);\r\n  const response = await fetchJson(url, { headers, signal }, []);\r\n  return response;\r\n}\r\n\r\nexport async function clearTable(table_id, signal) {\r\n  const url = new URL(`${API_BASE_URL}/tables/${table_id}/seat`);\r\n  const data = { \r\n    data: { \r\n      reservation_id: null, \r\n      occupied: false\r\n  }};\r\n  const response = await fetchJson(\r\n    url,\r\n    { method: \"delete\", headers, body: JSON.stringify(data), signal },\r\n    []\r\n  );\r\n  return response;\r\n}\r\n\r\nexport async function seatTable(table_id, reservation_id, signal) {\r\n  const url = new URL(`${API_BASE_URL}/tables/${table_id}/seat`);\r\n  const data = { \r\n    data: { \r\n      reservation_id, \r\n      occupied: true \r\n  }};\r\n  const response = await fetchJson(\r\n    url,\r\n    { method: \"put\", headers, body: JSON.stringify(data), signal },\r\n    []\r\n  );\r\n  return response;\r\n}\r\n\r\nexport async function updateReservationStatus(reservation_id, status, signal) {\r\n  const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}/status`);\r\n  const data = {\r\n    data: {\r\n      status\r\n    },\r\n  };\r\n  const response = await fetchJson(\r\n    url,\r\n    { method: \"put\", headers, body: JSON.stringify(data), signal },\r\n    []\r\n  );\r\n  return response;\r\n}\r\n\r\nexport async function getTableFromReservation(reservation_id, signal) {\r\n  const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}/table`);\r\n  const response = await fetchJson(url, { headers, signal }, []);\r\n  return response;\r\n}\r\n","import React from \"react\";\r\n\r\n/**\r\n * Defines the alert message to render if the specified error is truthy.\r\n * @param error\r\n *  an instance of an object with `.message` property as a string, typically an Error instance.\r\n * @returns {JSX.Element}\r\n *  a bootstrap danger alert that contains the message string.\r\n */\r\n\r\nfunction ErrorAlert({ error }) {\r\n  return (\r\n    error && (\r\n      <div className=\"alert alert-danger m-2\">Error: {error.message}</div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ErrorAlert;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { editReservation } from \"../utils/api\";\r\nimport \"../App.css\"\r\n\r\nfunction Reservations({ reservations }) {\r\n  const history = useHistory();\r\n\r\n  const cancelClickHandler = async (reservation) => {\r\n    const {\r\n      first_name,\r\n      last_name,\r\n      mobile_number,\r\n      reservation_date,\r\n      reservation_time,\r\n      people,\r\n    } = reservation;\r\n    if (window.confirm(\"Do you want to cancel this reservation?\")) {\r\n      try {\r\n        const abortController = new AbortController();\r\n        await editReservation(\r\n          reservation.reservation_id,\r\n          {\r\n            data: {\r\n              first_name,\r\n              last_name,\r\n              mobile_number,\r\n              reservation_date,\r\n              reservation_time,\r\n              people,\r\n              status: \"cancelled\",\r\n            },\r\n          },\r\n          abortController.signal\r\n        );\r\n        history.push(`/reservations/?date=${reservation.reservation_date}`);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return reservations.length ? (\r\n    reservations.map((reservation, index) => {\r\n      if (\r\n        reservation.status !== \"finished\" &&\r\n        reservation.status !== \"cancelled\"\r\n      )\r\n        return (\r\n          <div key={reservation.reservation_id}>\r\n            <hr />\r\n            <div className=\"row\" style={{ marginTop: 25 }}>\r\n              <div className=\"col-6\">\r\n                <h5>\r\n                  {reservation.first_name} {reservation.last_name}{\" \"}\r\n                  {reservation.reservation_time.slice(0, -3)}\r\n                </h5>\r\n                <h5>Party of {reservation.people}</h5>\r\n                <h5 data-reservation-id-status={reservation.reservation_id} style={{ marginTop: 20 }}>\r\n                  * {reservation.status.charAt(0).toUpperCase() + reservation.status.slice(1)} *\r\n                </h5>\r\n              </div>\r\n              {reservation.status === \"booked\" ? (\r\n                <div className=\"col-2\">\r\n                  <div className=\"row\">\r\n                    <button\r\n                      className=\"seatButton\"\r\n                      onClick={() =>\r\n                        history.push(\r\n                          `/reservations/${reservation.reservation_id}/seat`\r\n                        )\r\n                      }\r\n                    >\r\n                      Seat\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <button\r\n                      className=\"editButton\"\r\n                      onClick={() =>\r\n                        history.push(\r\n                          `/reservations/${reservation.reservation_id}/edit`\r\n                        )\r\n                      }\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <button\r\n                      className=\"cancelButton\"\r\n                      data-reservation-id-cancel={reservation.reservation_id}\r\n                      onClick={() => cancelClickHandler(reservation)}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        );\r\n      else {\r\n        return (\r\n          // <div key={reservation.reservation_id}>\r\n          //   <hr />\r\n          //   <p>\r\n          //     Reservation for {reservation.first_name} {reservation.last_name}{\" \"}\r\n          //     completed.\r\n          //   </p>\r\n          // </div>\r\n          <></>\r\n        )\r\n      };\r\n    })\r\n  ) : (\r\n    <div>\r\n      <hr />\r\n      <h6 className=\"d-flex justify-content-center\">No Reservations</h6>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reservations;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { clearTable, updateReservationStatus } from \"../utils/api\";\r\n\r\nfunction Tables({ tables }) {\r\n  const history = useHistory();\r\n\r\n  async function finishButton(table) {\r\n    if (\r\n      window.confirm(\r\n        \"Is this table ready to seat new guests? This cannot be undone.\"\r\n      )\r\n    ) {\r\n      try {\r\n        const abortController = new AbortController();\r\n        await updateReservationStatus(table.reservation_id, \"finished\", abortController.signal)\r\n        await clearTable(table.table_id, abortController.signal);\r\n        history.go(0);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  let sortedTables = (\r\n    <div>\r\n      <p>No tables found.</p>\r\n    </div>\r\n  );\r\n\r\n  if (tables.length) {\r\n    sortedTables = tables.map((table, index) => {\r\n      return (\r\n        <div key={index}>\r\n          <hr />\r\n          <h6>Table: {table.table_name}</h6>\r\n          {table.reservation_id ? (\r\n            <div>\r\n              <h6 data-table-id-status={table.table_id}>\r\n                Occupied</h6>\r\n              <button\r\n                className=\"clearButton\"\r\n                data-table-id-finish={table.table_id}\r\n                style={{ marginTop: 5 }}\r\n                onClick={() => finishButton(table)}\r\n              >\r\n                Clear\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <h6 data-table-id-status={table.table_id}>Free</h6>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  return sortedTables;\r\n}\r\n\r\nexport default Tables;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { listReservations, listTables } from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport { previous, next } from \"../utils/date-time\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Reservations from \"./Reservations\";\r\nimport Tables from \"./Tables\";\r\nimport \"./Dashboard.css\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction Dashboard({ date }) {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [reservationsError, setReservationsError] = useState(null);\r\n  const [tables, setTables] = useState([]);\r\n  const [tablesError, setTablesError] = useState(null);\r\n  const history = useHistory();\r\n\r\n  useEffect(loadDashboard, [date]);\r\n\r\n  function loadDashboard() {\r\n    const abortController = new AbortController();\r\n    setReservationsError(null);\r\n    listReservations({ date }, abortController.signal)\r\n      .then(setReservations)\r\n      .catch(setReservationsError);\r\n    listTables(abortController.signal).then(setTables).catch(setTablesError);\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  return (\r\n    <main className=\"container\">\r\n      <br />\r\n      <h1 className=\"row justify-content-center\" style={{ marginBottom: 25 }}>Dashboard</h1>\r\n      <div className=\"dateButtonGroup\">\r\n        <button\r\n          className=\"dateButton\"\r\n          onClick={() => history.push(`/dashboard?date=${previous(date)}`)}\r\n        >\r\n          Previous\r\n        </button>\r\n        <button \r\n        className=\"dateButton\" \r\n        onClick={() => history.push(\"/\")}>\r\n          Today\r\n        </button>\r\n        <button\r\n          className=\"dateButton\"\r\n          onClick={() => history.push(`/dashboard?date=${next(date)}`)}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n      <br />\r\n      <h4 style={{ marginBottom: 30 }}>Reservations for {date}</h4>\r\n      <ErrorAlert error={reservationsError} />\r\n      <Reservations reservations={reservations} />\r\n      <hr />\r\n      <h4 justify-content=\"center\">Tables</h4>\r\n      <ErrorAlert error={tablesError} />\r\n      <Tables tables={tables} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport { postReservation } from \"../utils/api\";\r\nimport \"../App.css\";\r\n\r\nfunction NewReservation() {\r\n  function asDateString(date) {\r\n    return `${date.getFullYear().toString(10)}-${(date.getMonth() + 1)\r\n      .toString(10)\r\n      .padStart(2, \"0\")}-${date.getDate().toString(10).padStart(2, \"0\")}`;\r\n  }\r\n  const today = asDateString(new Date());\r\n\r\n  const [first_name, setFirstName] = useState(null);\r\n  const [last_name, setLastName] = useState(null);\r\n  const [mobile_number, setMobileNumber] = useState(null);\r\n  const [reservation_date, setReservationDate] = useState(today);\r\n  const [reservation_time, setReservationTime] = useState(\"10:30\");\r\n  const [people, setPeople] = useState(1);\r\n\r\n  const [newReservationError, setNewReservationError] = useState(null);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    try {\r\n      await postReservation({\r\n        data: {\r\n          first_name,\r\n          last_name,\r\n          mobile_number,\r\n          reservation_date,\r\n          reservation_time,\r\n          people,\r\n        },\r\n      });\r\n      history.push(`/dashboard?date=${reservation_date}`);\r\n    } catch (err) {\r\n      setNewReservationError(err);\r\n    }\r\n  }\r\n\r\n  const handleFirstNameChange = (event) => {\r\n    setFirstName(event.target.value);\r\n  };\r\n  const handleLastNameChange = (event) => {\r\n    setLastName(event.target.value);\r\n  };\r\n  const handleMobileNumberChange = (event) => {\r\n    setMobileNumber(event.target.value);\r\n  };\r\n  const handleReservationDateChange = async (event) => {\r\n    await setReservationDate(event.target.value);\r\n    console.log(typeof reservation_date, reservation_date)\r\n  };\r\n  const handleReservationTimeChange = (event) => {\r\n    setReservationTime(event.target.value);\r\n  };\r\n  const handlePeopleChange = (event) => {\r\n    setPeople(Number(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 style={{ marginTop: 15, marginBottom: 15 }}>New Reservation</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n        <label className=\"col-4\" htmlFor=\"first_name\">First Name:</label>\r\n          <input\r\n          className=\"col-4\"\r\n            id=\"first_name\"\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            value={first_name}\r\n            onChange={handleFirstNameChange}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n        <label className=\"col-4\" htmlFor=\"last_name\">Last Name:</label>\r\n          <input\r\n           className=\"col-4\"\r\n            id=\"last_name\"\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            value={last_name}\r\n            onChange={handleLastNameChange}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n        <label className=\"col-4\" htmlFor=\"mobile_number\">\r\n          Mobile Number:\r\n        </label>\r\n          <input\r\n           className=\"col-4\"\r\n            id=\"mobile_number\"\r\n            type=\"text\"\r\n            name=\"mobile_number\"\r\n            value={mobile_number}\r\n            onChange={handleMobileNumberChange}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n        <label className=\"col-4\" htmlFor=\"reservation_date\">\r\n          Reservation Date:\r\n        </label>\r\n          <input\r\n           className=\"col-4\"\r\n            id=\"reservation_date\"\r\n            type=\"date\"\r\n            name=\"reservation_date\"\r\n            value={reservation_date}\r\n            onChange={handleReservationDateChange}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n        <label className=\"col-4\" htmlFor=\"reservation_time\">\r\n          Reservation Time:\r\n        </label>\r\n          <input\r\n           className=\"col-4\"\r\n            id=\"reservation_time\"\r\n            type=\"time\"\r\n            step=\"900\"\r\n            name=\"reservation_time\"\r\n            value={reservation_time}\r\n            onChange={handleReservationTimeChange}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n        <label className=\"col-4\" htmlFor=\"people\">\r\n          People:\r\n        </label>\r\n          <input\r\n           className=\"col-2\"\r\n            id=\"people\"\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"people\"\r\n            value={people}\r\n            onChange={handlePeopleChange}\r\n          />\r\n        </div>\r\n        <br/>\r\n        <button className=\"submitButton\" type=\"submit\">Submit</button>\r\n        <button className=\"cancelButton\" type=\"button\" onClick={() => history.goBack()}>\r\n          Cancel\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <ErrorAlert error={newReservationError} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewReservation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport { updateReservationStatus, seatTable } from \"../utils/api\";\r\nimport { listTables } from \"../utils/api\";\r\n\r\nfunction SeatReservation() {\r\n  const [tables, setTables] = useState([]);\r\n  const [tablesError, setTablesError] = useState(null);\r\n  const [selectedTable, setSelectedTable] = useState(null);\r\n\r\n  const { reservation_id } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(loadDashboard, []);\r\n\r\n  function loadDashboard() {\r\n    const abortController = new AbortController();\r\n    listTables(abortController.signal).then(setTables).catch(setTablesError);\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  async function handleSubmit(reservation_id) {\r\n    const abortController = new AbortController();\r\n    await seatTable(selectedTable, reservation_id, abortController.signal)\r\n    await updateReservationStatus(reservation_id, \"seated\", abortController.signal)\r\n      .then(() => history.push(\"/\"))\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  \r\n  function changeHandler(event) {\r\n    setSelectedTable(Number(event.target.value));\r\n  }\r\n\r\n  const mappedTables = (\r\n    tables.map((table, index) => {\r\n      return (\r\n        table.reservation_id ? (\r\n          <option key={index} value={table.table_id}>\r\n            {table.table_name} - Occupied\r\n          </option>\r\n        )\r\n        : <option key={index} value={table.table_id}>\r\n          {table.table_name} - {table.capacity}\r\n        </option>\r\n      );\r\n    })\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 style={{ marginTop: 15 }}>Seat Reservation</h1>\r\n      <select name=\"table_id\" onChange={changeHandler} style={{ marginTop: 10 }}>\r\n        <option value=\"\">Select a table...</option>\r\n        {mappedTables}\r\n      </select>\r\n      <br />\r\n      <br />\r\n      <ErrorAlert error={tablesError} />\r\n      <button\r\n        type=\"submit\"\r\n        className=\"submitButton\"\r\n        onClick={() => handleSubmit(Number(reservation_id))}\r\n      >\r\n        Submit\r\n      </button>\r\n      <button type=\"button\" \r\n      className=\"cancelButton\"\r\n      onClick={() => history.goBack()}>\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SeatReservation;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport { postTable } from \"../utils/api\";\r\n\r\nfunction NewTable() {\r\n  const [table_name, setTableName] = useState(\"\");\r\n  const [capacity, setCapacity] = useState(null);\r\n  const [tableError, setTableError] = useState(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const tableNameChangeHandler = (event) => {\r\n    setTableName(event.target.value);\r\n  };\r\n\r\n  const capacityChangeHandler = (event) => {\r\n    setCapacity(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await postTable({\r\n        data: {\r\n          table_name,\r\n          capacity,\r\n        },\r\n      });\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      setTableError(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 style={{ marginTop: 15, marginBottom: 15 }}>New Table</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n        <label className=\"col-4\" htmlFor=\"table_name\">Table Name: </label>\r\n        <input\r\n        className=\"col-4\"\r\n          id=\"table_name\"\r\n          type=\"string\"\r\n          name=\"table_name\"\r\n          value={table_name}\r\n          onChange={tableNameChangeHandler}\r\n        />\r\n        </div>\r\n        <div className=\"row\">\r\n        <label className=\"col-4\" htmlFor=\"capacity\">Capacity: </label>\r\n        <input\r\n         className=\"col-4\"\r\n          id=\"capacity\"\r\n          type=\"integer\"\r\n          name=\"capacity\"\r\n          value={capacity}\r\n          onChange={capacityChangeHandler}\r\n        />\r\n        </div>\r\n        <button className=\"submitButton\" type=\"submit\" style={{ marginTop: 15 }}>\r\n          Submit\r\n        </button>\r\n        <button className=\"cancelButton\" type=\"button\" onClick={history.goBack}>\r\n          Cancel\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <ErrorAlert error={tableError} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewTable;\r\n","import React from \"react\";\r\n\r\n/**\r\n * Defines the \"Not Found\" page that is displayed for any unmatched route.\r\n *\r\n * You will not need to make changes to this file.\r\n *\r\n * @returns {JSX.Element}\r\n */\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"NotFound\">\r\n      <h1>Not Found</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","/**\r\n * useQuery is a custom hook that makes use of the useLocation and the URL class to parse the query parameters.\r\n *\r\n * @example\r\n *\r\n *     const query = useQuery();\r\n *     const date = query.get(\"date\")\r\n */\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default useQuery;\r\n","import React, { useState } from \"react\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport { listReservations } from \"../utils/api\";\r\nimport Reservations from \"../dashboard/Reservations\";\r\n\r\nfunction Search() {\r\n  const [mobile_number, setMobileNumber] = useState(null);\r\n  const [reservations, setReservations] = useState([]);\r\n  const [reservationsError, setReservationsError] = useState(null);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const abortController = new AbortController();\r\n    listReservations({ mobile_number }, abortController.signal)\r\n      .then(setReservations)\r\n      .catch(setReservationsError);\r\n    return () => abortController.abort();\r\n  };\r\n\r\n  const handleMobileNumberChange = (event) => {\r\n    setMobileNumber(event.target.value);\r\n  };\r\n\r\n  const ifFound = reservations.length ? (\r\n    <Reservations reservations={reservations} />\r\n  ) : (\r\n    <p>No reservations found</p>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 style={{ marginTop: 15 }}>Search for Reservation</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          style={{ marginTop: 15 }}\r\n          className=\"col-5\"\r\n          name=\"mobile_number\"\r\n          type=\"text\"\r\n          value={mobile_number}\r\n          placeholder=\"Enter mobile number\"\r\n          onChange={handleMobileNumberChange}\r\n        />\r\n        <br/>\r\n        <button className=\"findButton\" type=\"submit\" style={{ marginTop: 30, marginBottom: 30 }}>Find</button>\r\n        <ErrorAlert error={reservationsError} />\r\n        {ifFound}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { editReservation, getReservation } from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\nexport default function EditReservation() {\r\n  const [first_name, setFirstName] = useState(null);\r\n  const [last_name, setLastName] = useState(null);\r\n  const [mobile_number, setMobileNumber] = useState(null);\r\n  const [reservation_date, setReservationDate] = useState(null);\r\n  const [reservation_time, setReservationTime] = useState(null);\r\n  const [people, setPeople] = useState(null);\r\n  const { reservation_id } = useParams();\r\n\r\n  const [newReservationError, setNewReservationError] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const [reservation, setReservation] = useState({});\r\n\r\n  /* ----- useEffect & loading API data ----- */\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    async function loadReservation() {\r\n      try {\r\n        const response = await getReservation(\r\n          reservation_id,\r\n          abortController.signal\r\n        );\r\n        setReservation(response);\r\n        setFirstName(response.first_name);\r\n        setLastName(response.last_name);\r\n        setMobileNumber(response.mobile_number);\r\n        setReservationDate(response.reservation_date);\r\n        setReservationTime(response.reservation_time);\r\n        setPeople(response.people);\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          console.log(\"Aborted\");\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    loadReservation();\r\n    return () => abortController.abort();\r\n  }, [reservation_id]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const abortController = new AbortController();\r\n    try {\r\n      await editReservation(\r\n        reservation_id,\r\n        {\r\n          data: {\r\n            first_name,\r\n            last_name,\r\n            mobile_number,\r\n            reservation_date,\r\n            reservation_time,\r\n            people,\r\n            status: \"booked\",\r\n          },\r\n        },\r\n        abortController.signal\r\n      );\r\n      history.push(`/dashboard/?date=${reservation.reservation_date}`);\r\n    } catch (error) {\r\n      setNewReservationError(error);\r\n    }\r\n  };\r\n\r\n  const handleFirstNameChange = (event) => {\r\n    setFirstName(event.target.value);\r\n  };\r\n  const handleLastNameChange = (event) => {\r\n    setLastName(event.target.value);\r\n  };\r\n  const handleMobileNumberChange = (event) => {\r\n    setMobileNumber(event.target.value);\r\n  };\r\n  const handleReservationDateChange = (event) => {\r\n    setReservationDate(event.target.value);\r\n  };\r\n  const handleReservationTimeChange = (event) => {\r\n    setReservationTime(event.target.value);\r\n  };\r\n  const handlePeopleChange = (event) => {\r\n    setPeople(Number(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 style={{ marginTop: 15, marginBottom: 15 }}>Edit Reservation</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n          <label className=\"col-4\" htmlFor=\"first_name\">\r\n            First Name:\r\n          </label>\r\n          <input\r\n            className=\"col-4\"\r\n            id=\"first_name\"\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            value={first_name}\r\n            onChange={handleFirstNameChange}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <label className=\"col-4\" htmlFor=\"last_name\">\r\n            Last Name:\r\n          </label>\r\n          <input\r\n            className=\"col-4\"\r\n            id=\"last_name\"\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            value={last_name}\r\n            onChange={handleLastNameChange}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <label className=\"col-4\" htmlFor=\"mobile_number\">\r\n            Mobile Number:\r\n          </label>\r\n          <input\r\n            className=\"col-4\"\r\n            id=\"mobile_number\"\r\n            type=\"text\"\r\n            name=\"mobile_number\"\r\n            value={mobile_number}\r\n            onChange={handleMobileNumberChange}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <label className=\"col-4\" htmlFor=\"reservation_date\">\r\n            Reservation Date:\r\n          </label>\r\n          <input\r\n            className=\"col-4\"\r\n            id=\"reservation_date\"\r\n            type=\"date\"\r\n            name=\"reservation_date\"\r\n            value={reservation_date}\r\n            onChange={handleReservationDateChange}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <label className=\"col-4\" htmlFor=\"reservation_time\">\r\n            Reservation Time:\r\n          </label>\r\n          <input\r\n            className=\"col-4\"\r\n            id=\"reservation_time\"\r\n            type=\"time\"\r\n            step=\"900\"\r\n            name=\"reservation_time\"\r\n            value={reservation_time}\r\n            onChange={handleReservationTimeChange}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <label className=\"col-4\" htmlFor=\"people\">\r\n            People:\r\n          </label>\r\n          <input\r\n            className=\"col-2\"\r\n            id=\"people\"\r\n            type=\"number\"\r\n            min=\"1\"\r\n            name=\"people\"\r\n            value={people}\r\n            onChange={handlePeopleChange}\r\n          />\r\n        </div>\r\n        <br />\r\n        <button className=\"submitButton\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          className=\"cancelButton\"\r\n          type=\"button\"\r\n          onClick={() => history.goBack()}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <ErrorAlert error={newReservationError} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\nimport NewReservation from \"../new_reservation/NewReservation\";\r\nimport SeatReservation from \"../seat_reservation/SeatReservation\";\r\nimport NewTable from \"../new_table/NewTable\"\r\nimport NotFound from \"./NotFound\";\r\nimport { today } from \"../utils/date-time\";\r\nimport useQuery from \"../utils/useQuery\";\r\nimport Search from \"../search/Search\";\r\nimport EditReservation from \"../edit_reservation/EditReservation\";\r\n\r\n/**\r\n * Defines all the routes for the application.\r\n *\r\n * You will need to make changes to this file.\r\n *\r\n * @returns {JSX.Element}\r\n */\r\n\r\n\r\nfunction Routes() {\r\n  const query = useQuery();\r\n  return (\r\n    <Switch>\r\n      <Route exact={true} path=\"/\">\r\n        <Redirect to={\"/dashboard\"} />\r\n      </Route>\r\n      <Route exact={true} path=\"/reservations\">\r\n        <Redirect to={\"/dashboard\"} />\r\n      </Route>\r\n      <Route path=\"/dashboard\">\r\n        <Dashboard date={query.get(\"date\") || today()} />\r\n      </Route>\r\n      <Route path=\"/reservations/new\">\r\n        <NewReservation />\r\n      </Route>\r\n      <Route path=\"/reservations/:reservation_id/seat\">\r\n        <SeatReservation />\r\n      </Route>\r\n      <Route path=\"/reservations/:reservation_id/edit\">\r\n        <EditReservation />\r\n      </Route>\r\n      <Route path=\"/tables/new\">\r\n        <NewTable />\r\n      </Route>\r\n      <Route path=\"/search\">\r\n        <Search />\r\n      </Route>\r\n      <Route>\r\n        <NotFound />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport Routes from \"./Routes\";\r\n\r\nimport \"./Layout.css\";\r\n\r\n/**\r\n * Defines the main layout of the application.\r\n *\r\n * You will not need to make changes to this file.\r\n *\r\n * @returns {JSX.Element}\r\n */\r\nfunction Layout() {\r\n  return (\r\n    <div className=\"container-fluid\" style={{ backgroundColor: 'blanchedalmond' }}>\r\n      <div className=\"row h-100\">\r\n        <div className=\"col-md-2 side-bar\" style={{ paddingBottom: 10 }}>\r\n          <Menu />\r\n        </div>\r\n        <div className=\"col\">\r\n          <Routes />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Layout from \"./layout/Layout\";\r\n\r\n/**\r\n * Defines the root application component.\r\n * @returns {JSX.Element}\r\n */\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\">\r\n        <Layout />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}